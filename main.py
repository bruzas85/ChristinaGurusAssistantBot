import telebot
import time
import requests
import json
from datetime import datetime
from telebot.types import ReplyKeyboardMarkup, KeyboardButton

BOT_TOKEN = '8412835956:AAEPEddVwd1dKt3VdzwUoVhbdSCipD_f31o'
WEATHER_API_KEY = 'c5b261566d137f05bbc36e67f864ee07'

bot = telebot.TeleBot(BOT_TOKEN)

# –≠–º–æ–¥–∑–∏
emoji_ok = "‚úÖ"


def create_main_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

    button_start = KeyboardButton('üöÄ –ù–∞—á–∞—Ç—å')
    button_weather = KeyboardButton('üå§Ô∏è –ü–æ–≥–æ–¥–∞')
    button_abilities = KeyboardButton('‚ùì –ß—Ç–æ —Ç—ã –º–æ–∂–µ—à—å?')
    button_podcasts = KeyboardButton('üéß –ü–æ–¥–∫–∞—Å—Ç—ã')
    button_programs = KeyboardButton('üíé –ü—Ä–æ–≥—Ä–∞–º–º—ã')
    button_session = KeyboardButton('üìÖ –°–µ—Å—Å–∏—è')

    keyboard.add(button_start)
    keyboard.add(button_weather, button_abilities)
    keyboard.add(button_podcasts, button_programs, button_session)

    return keyboard


def get_weather(city="–ú–æ—Å–∫–≤–∞"):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞
    """
    try:
        # URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–≥–æ–¥—ã
        url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}&units=metric&lang=ru"

        response = requests.get(url)
        data = response.json()

        if data["cod"] != 200:
            return None

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        temperature = round(data["main"]["temp"])
        feels_like = round(data["main"]["feels_like"])
        description = data["weather"][0]["description"]
        humidity = data["main"]["humidity"]
        wind_speed = data["wind"]["speed"]

        weather_info = {
            'temperature': temperature,
            'feels_like': feels_like,
            'description': description,
            'humidity': humidity,
            'wind_speed': wind_speed,
            'city': city
        }

        return weather_info

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã: {e}")
        return None


def get_weather_recommendation(weather_data):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–≥–æ–¥—ã
    """
    temp = weather_data['temperature']
    description = weather_data['description']
    wind_speed = weather_data['wind_speed']

    recommendations = []

    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ
    if temp < -10:
        recommendations.append("ü•∂ –û—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ! –û–¥–µ–Ω—å—Ç–µ—Å—å –æ—á–µ–Ω—å —Ç–µ–ø–ª–æ - –ø—É—Ö–æ–≤–∏–∫, —à–∞–ø–∫–∞, —à–∞—Ä—Ñ, –ø–µ—Ä—á–∞—Ç–∫–∏")
    elif temp < 0:
        recommendations.append("‚ùÑÔ∏è –•–æ–ª–æ–¥–Ω–æ! –ù–∞–¥–µ–Ω—å—Ç–µ –∑–∏–º–Ω—é—é –∫—É—Ä—Ç–∫—É, —à–∞–ø–∫—É –∏ —à–∞—Ä—Ñ")
    elif temp < 10:
        recommendations.append("üçÇ –ü—Ä–æ—Ö–ª–∞–¥–Ω–æ! –ö—É—Ä—Ç–∫–∞ –∏–ª–∏ —Ç–µ–ø–ª—ã–π —Å–≤–∏—Ç–µ—Ä –±—É–¥—É—Ç –≤ —Å–∞–º—ã–π —Ä–∞–∑")
    elif temp < 20:
        recommendations.append("üå§Ô∏è –¢–µ–ø–ª–æ! –õ–µ–≥–∫–∞—è –∫—É—Ä—Ç–∫–∞ –∏–ª–∏ –∫–æ—Ñ—Ç–∞")
    else:
        recommendations.append("‚òÄÔ∏è –ñ–∞—Ä–∫–æ! –ú–æ–∂–Ω–æ –æ–¥–µ–≤–∞—Ç—å—Å—è –ª–µ–≥–∫–æ")

    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ—Å–∞–¥–∫–∞–º
    if '–¥–æ–∂–¥—å' in description.lower() or 'rain' in description.lower():
        recommendations.append("‚òî –í–æ–∑—å–º–∏—Ç–µ –∑–æ–Ω—Ç–∏–∫! –°–µ–≥–æ–¥–Ω—è –±—É–¥–µ—Ç –¥–æ–∂–¥—å")
    elif '—Å–Ω–µ–≥' in description.lower() or 'snow' in description.lower():
        recommendations.append("‚õÑ –ò–¥–µ—Ç —Å–Ω–µ–≥! –ù–∞–¥–µ–Ω—å—Ç–µ –Ω–µ–ø—Ä–æ–º–æ–∫–∞–µ–º—É—é –æ–±—É–≤—å")

    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤–µ—Ç—Ä—É
    if wind_speed > 8:
        recommendations.append("üí® –°–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä! –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –≤–µ—Ç—Ä–æ–≤–∫–∞")

    return recommendations


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –∏ /help
@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    welcome_text = """–ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç?

–ü—Ä–∏–≤–µ—Ç! –Ø - –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫ 
–ö—Ä–∏—Å—Ç–∏–Ω—ã –ì—É–≥—É –ø–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏, –ø–æ–º–æ–≥—É
–ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã.    

–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ:

‚úÖ –ü—Ä–æ—Å–ª—É—à–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ
–ø–æ–¥–∫–∞—Å—Ç—ã
‚úÖ –ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–ª–∞—Ç–Ω—ã–µ
–ø—Ä–æ–≥—Ä–∞–º–º—ã
‚úÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–µ—Å—Å–∏—é

üëá –ù–∞–∂–º–∏—Ç–µ "–ù–∞—á–∞—Ç—å", —á—Ç–æ–±—ã
–æ–±—Ä–µ—Å—Ç–∏ —Ü–µ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –∏ —Å—Ç–∞—Ç—å
—É–≤–µ—Ä–µ–Ω–Ω–æ–π –≤ —Å–µ–±–µ, –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–π,
—Å–º–µ–ª–æ–π –∂–µ–Ω—â–∏–Ω–æ–π, –∫–æ—Ç–æ—Ä–∞—è —Ç–≤–æ—Ä–∏—Ç
—Å–≤–æ—é –∂–∏–∑–Ω—å - —Å—Ç—Ä–æ–∏—Ç –±–ª–∏–∑–∫–∏–µ
—Ç–µ–ø–ª—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è, —Ü–µ–Ω–∏—Ç,
–ª—é–±–∏—Ç –∏ —É–≤–∞–∂–∞–µ—Ç —Å–µ–±—è, –∏ 
—É–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏, –∫–∞–∫ –≤–∑—Ä–æ—Å–ª–∞—è!"""

    keyboard = create_main_keyboard()
    bot.send_message(message.chat.id, welcome_text, reply_markup=keyboard)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å"
@bot.message_handler(func=lambda message: message.text == 'üöÄ –ù–∞—á–∞—Ç—å')
def start_journey(message):
    start_text = """üéâ –ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Ä! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏ –∏ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—è!

–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:

üéß *–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ø–æ–¥–∫–∞—Å—Ç—ã* - –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–µ –±–µ—Å–µ–¥—ã –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã

üíé *–ü–ª–∞—Ç–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã* - –≥–ª—É–±–æ–∫–∏–µ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫—É—Ä—Å—ã

üìÖ *–õ–∏—á–Ω–∞—è —Å–µ—Å—Å–∏—è* - –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å –ö—Ä–∏—Å—Ç–∏–Ω–æ–π

–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá"""

    keyboard = create_main_keyboard()
    bot.send_message(message.chat.id, start_text, reply_markup=keyboard, parse_mode='Markdown')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥–∫–∞—Å—Ç—ã"
@bot.message_handler(func=lambda message: message.text == 'üéß –ü–æ–¥–∫–∞—Å—Ç—ã')
def show_podcasts(message):
    podcasts_text = """üéß *–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ø–æ–¥–∫–∞—Å—Ç—ã*

–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –ø–æ–¥–∫–∞—Å—Ç—ã –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–µ–º—ã:

‚Ä¢ –û—Ç–Ω–æ—à–µ–Ω–∏—è –∏ –ª—é–±–æ–≤—å –∫ —Å–µ–±–µ
‚Ä¢ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å
‚Ä¢ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–µ–±–µ
‚Ä¢ –õ–∏—á–Ω–æ—Å—Ç–Ω—ã–π —Ä–æ—Å—Ç

*–°—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–¥–∫–∞—Å—Ç—ã:*
https://t.me/psychology_podcasts
https://youtube.com/psychology_channel

*–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –Ω–∞—á–∞—Ç—å —Å:*
"5 —à–∞–≥–æ–≤ –∫ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –≤ —Å–µ–±–µ"
"–ö–∞–∫ –ø–æ–ª—é–±–∏—Ç—å —Å–µ–±—è –Ω–∞—Å—Ç–æ—è—â—É—é\""""

    bot.send_message(message.chat.id, podcasts_text, parse_mode='Markdown')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–≥—Ä–∞–º–º—ã"
@bot.message_handler(func=lambda message: message.text == 'üíé –ü—Ä–æ–≥—Ä–∞–º–º—ã')
def show_programs(message):
    programs_text = """üíé *–ü–ª–∞—Ç–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã*

–ì–ª—É–±–æ–∫–∏–µ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫—É—Ä—Å—ã:

*1. "–ü—É—Ç—å –∫ —Å–µ–±–µ"* - 4900‚ÇΩ
   - 10 —É—Ä–æ–∫–æ–≤ —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è
   - –ú–µ–¥–∏—Ç–∞—Ü–∏–∏ –∏ –ø—Ä–∞–∫—Ç–∏–∫–∏
   - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫—É—Ä–∞—Ç–æ—Ä–∞

*2. "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å"* - 6900‚ÇΩ
   - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–æ–º
   - –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è –¥–µ–Ω–µ–≥
   - –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ä–æ—Å—Ç–∞ –¥–æ—Ö–æ–¥–æ–≤

*3. "–ì–∞—Ä–º–æ–Ω–∏—è –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö"* - 8900‚ÇΩ
   - –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π
   - –†–∞–±–æ—Ç–∞ —Å –≥—Ä–∞–Ω–∏—Ü–∞–º–∏
   - –ò—Å—Ü–µ–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ–≥–æ

–î–ª—è –ø–æ–∫—É–ø–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ: @kristina_guru"""

    bot.send_message(message.chat.id, programs_text, parse_mode='Markdown')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°–µ—Å—Å–∏—è"
@bot.message_handler(func=lambda message: message.text == 'üìÖ –°–µ—Å—Å–∏—è')
def show_session(message):
    session_text = """üìÖ *–ó–∞–ø–∏—Å—å –Ω–∞ —Å–µ—Å—Å–∏—é*

*–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å –ö—Ä–∏—Å—Ç–∏–Ω–æ–π:*

- –ì–ª—É–±–æ–∫–∏–π —Ä–∞–∑–±–æ—Ä –≤–∞—à–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏
- –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ

*–§–æ—Ä–º–∞—Ç:* –æ–Ω–ª–∞–π–Ω (Zoom/Skype)
*–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:* 60-90 –º–∏–Ω—É—Ç
*–°—Ç–æ–∏–º–æ—Å—Ç—å:* 3000‚ÇΩ

*–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞–ø–∏—à–∏—Ç–µ:* 
@kristina_guru
–∏–ª–∏ –Ω–∞ –ø–æ—á—Ç—É: kristina@guru.ru

–£–∫–∞–∂–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –∏ –∫—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å."""

    bot.send_message(message.chat.id, session_text, parse_mode='Markdown')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /weather –∏–ª–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ –ø–æ–≥–æ–¥–µ
@bot.message_handler(commands=['weather'])
@bot.message_handler(func=lambda message: message.text == 'üå§Ô∏è –ü–æ–≥–æ–¥–∞' or '–ø–æ–≥–æ–¥–∞' in message.text.lower())
def weather_handler(message):
    city = "–ú–æ—Å–∫–≤–∞"
    bot.send_chat_action(message.chat.id, 'typing')

    weather_data = get_weather(city)

    if weather_data:
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–≥–æ–¥–µ
        weather_text = f"üå§Ô∏è –ü–æ–≥–æ–¥–∞ –≤ {city}:\n"
        weather_text += f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather_data['temperature']}¬∞C\n"
        weather_text += f"–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {weather_data['feels_like']}¬∞C\n"
        weather_text += f"–û–ø–∏—Å–∞–Ω–∏–µ: {weather_data['description'].capitalize()}\n"
        weather_text += f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {weather_data['humidity']}%\n"
        weather_text += f"–í–µ—Ç–µ—Ä: {weather_data['wind_speed']} –º/—Å\n"

        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        recommendations = get_weather_recommendation(weather_data)
        if recommendations:
            weather_text += "\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n"
            for rec in recommendations:
                weather_text += f"‚Ä¢ {rec}\n"

        bot.reply_to(message, weather_text)
    else:
        bot.reply_to(message, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞ "–ß—Ç–æ —Ç—ã –º–æ–∂–µ—à—å?"
@bot.message_handler(
    func=lambda message: message.text == '‚ùì –ß—Ç–æ —Ç—ã –º–æ–∂–µ—à—å?' or any(phrase in message.text.lower() for phrase in [
        '—á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å', '—á—Ç–æ —É–º–µ–µ—à—å', '—Ç–≤–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏', '—á–µ–º –º–æ–∂–µ—à—å –ø–æ–º–æ—á—å'
    ]))
def what_can_you_do(message):
    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
    user_name = message.from_user.first_name
    if user_name:
        greeting = f"–î–æ—Ä–æ–≥–æ–π(–∞—è) {user_name},"
    else:
        greeting = "–î–æ—Ä–æ–≥–∞—è Kristina Guru of Psychology,"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —á–∞—Å—Ç—è–º —Å –ø–∞—É–∑–∞–º–∏
    first_part = bot.send_message(message.chat.id, greeting)
    time.sleep(1.5)

    second_part = bot.send_message(message.chat.id, "—è –º–æ–≥—É –≤—Å–µ!")
    time.sleep(1.5)

    third_part = bot.send_message(message.chat.id, "–ü—Ä–∞–≤–¥–∞ —è –ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ —É—á—É—Å—å=)))")
    time.sleep(1.5)

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ
    bot.send_chat_action(message.chat.id, 'typing')
    time.sleep(1)

    weather_data = get_weather()
    if weather_data:
        weather_text = f"\nüå§Ô∏è –ö—Å—Ç–∞—Ç–∏, –ø–æ–≥–æ–¥–∞ –≤ {weather_data['city']}: {weather_data['temperature']}¬∞C, {weather_data['description']}"

        recommendations = get_weather_recommendation(weather_data)
        if recommendations:
            main_recommendation = recommendations[0]  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—É—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
            weather_text += f"\n{main_recommendation}"

        final_message = bot.send_message(message.chat.id, weather_text)
    else:
        bot.send_message(message.chat.id, "\nüå§Ô∏è –ö—Å—Ç–∞—Ç–∏, —è –º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ –ø–æ–≥–æ–¥–µ! –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ü–æ–≥–æ–¥–∞'")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def echo_all(message):
    bot.reply_to(message, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ üëá", reply_markup=create_main_keyboard())


if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    bot.infinity_polling()